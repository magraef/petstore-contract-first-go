openapi: 3.0.1
info:
  title:  Petstore
  description: "This is a sample server Petstore api"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: /api
tags:
  - name: pet
    description: Everything about your Pets
paths:
  /pets:
    get:
      tags:
        - pet
      summary: returns all existing pet matching optional filters
      operationId: getPets
      parameters:
      - in: query
        name: category
        required: false
        schema:
          type: array
          items:
            type: string
        description: The category name to filter pets
      - in: query
        name: from
        required: false
        schema:
          type: integer
          default: 0
        description: The id of the pet before starting to collect the result set
      - in: query
        name: limit
        schema:
          type: integer
          default: 10
        description: The numbers of items to return
      responses:
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Pet'
      x-codegen-request-body-name: body
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
      x-codegen-request-body-name: body
  /pets/{petId}:
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
    put:
      tags:
        - pet
      summary: Updates a pet in the store
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      responses:
        "400":
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "409":
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "202":
          description: ok
          content: {}
    delete:
      tags:
        - pet
      summary: Deletes a pet
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        "404":
          description: Pet not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        "204":
          description: ok
          content: { }
components:
  schemas:
    Category:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Pet:
      required:
        - name
        - category
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
    Problem:
      title: An RFC 9457 problem object
      type: object
      required:
        - status
        - title
        - instance
        - detail
      properties:
        type:
          type: string
          format: uri-reference
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: A short, human-readable summary of the problem type.
        status:
          type: integer
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 599
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          format: uri-reference
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.